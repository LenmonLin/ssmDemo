<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>SSMDemo</groupId>
  <artifactId>SSMDemo</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>SSMDemo Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
		<!-- spring版本号 -->
		<spring.version>6.0.0</spring.version>
		<!-- mybatis版本号 -->
		<mybatis.version>3.2.6</mybatis.version>
		<!-- log4j日志文件管理包版本 -->
        <slf4j.version>1.7.7</slf4j.version>  
        <log4j.version>1.2.17</log4j.version> 
	</properties>
  
  <dependencies>
  
  	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!--Expression Language (depends on spring-core) Define this if you use 
		Spring Expression APIs (org.springframework.expression.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
		this if you use Spring Bean APIs (org.springframework.beans.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
		spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!--Application Context (depends on spring-core, spring-expression, spring-aop, 
		spring-beans) This is the central artifact for Spring’s Dependency Injection 
		Container and is generally always defined -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Various Application Context utilities, including EhCache, JavaMail, 
		Quartz, and Freemarker integration Define this if you need any of these integrations -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!--Transaction Management Abstraction (depends on spring-core, spring-beans, 
		spring-aop, spring-context) Define this if you use Spring Transactions or 
		DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
		spring-tx) Define this if you use Spring’s JdbcTemplate API (org.springframework.jdbc.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
		and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
		Define this if you need ORM (org.springframework.orm.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
		JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
		spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Web application development utilities applicable to both Servlet and 
		Portlet Environments (depends on spring-core, spring-beans, spring-context) 
		Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
		web framework with Spring (org.springframework.web.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
		spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
		Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Support for testing Spring applications with tools such as JUnit and 
		TestNG This artifact is generally always defined with a ‘test’ scope for 
		the integration testing framework and unit testing stubs -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- mybatis核心包 -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>${mybatis.version}</version>
	</dependency>
	<!-- mybatis/spring包 -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>1.2.2</version>
	</dependency>
	<!-- 导入Mysql数据库链接jar包 -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.38</version>
	</dependency>

	<!-- 日志记录依赖包，很多都依赖此包，像log4j,json-lib等等 -->
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.3</version>
	</dependency>

	<!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.2.2</version>
	</dependency>
	<!-- JSTL标签类 -->
	<dependency>
		<groupId>jstl</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<!-- 日志文件管理包 -->
	<!-- 格式化对象，方便输出日志 -->  
     <dependency>  
         <groupId>com.alibaba</groupId>  
         <artifactId>fastjson</artifactId>  
         <version>1.1.41</version>  
     </dependency>  
     <dependency>  
         <groupId>org.slf4j</groupId>  
         <artifactId>slf4j-api</artifactId>  
         <version>${slf4j.version}</version>  
     </dependency>  
     <dependency>  
         <groupId>org.slf4j</groupId>  
         <artifactId>slf4j-log4j12</artifactId>  
         <version>${slf4j.version}</version>  
     </dependency>  
     <!-- log end -->  
    <!-- jackson 包  start-->
    <dependency> 
		<groupId>org.codehaus.jackson</groupId> 
		<artifactId>jackson-core-asl</artifactId> 
		<version>1.9.11</version> 
	</dependency> 
	<dependency> 
		<groupId>org.codehaus.jackson</groupId> 
		<artifactId>jackson-mapper-asl</artifactId> 
		<version>1.9.11</version> 
	</dependency> 
    <!-- jackson 包  结束-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>SSMDemo</finalName>
  </build>
</project>
